"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolveSeoStrategy = void 0;
// https://github.com/omrilotan/isbot
// https://github.com/mahovich/isbot-fast
// https://stackoverflow.com/questions/34647657/how-to-detect-web-crawlers-for-seo-using-express/68869738#68869738
const isbot_fast_1 = __importDefault(require("isbot-fast"));
const picocolors_1 = __importDefault(require("@brillout/picocolors"));
const utils_1 = require("../utils");
function resolveSeoStrategy(options = {}) {
    const seoStrategy = options.seoStrategy || 'conservative';
    if (!options.userAgent) {
        showWarning();
        return { disableStream: true };
    }
    if (!(0, isbot_fast_1.default)(options.userAgent)) {
        return { disableStream: false };
    }
    const isGoogleBot = options.userAgent.toLowerCase().includes('googlebot');
    if (seoStrategy === 'google-speed' && isGoogleBot) {
        return { disableStream: false };
    }
    return { disableStream: true };
}
exports.resolveSeoStrategy = resolveSeoStrategy;
function showWarning() {
    const isVike = (0, utils_1.isVikeReactApp)();
    const link = isVike ? 'https://vike.dev/streaming' : 'https://github.com/brillout/react-streaming';
    const help = isVike
        ? [
            picocolors_1.default.code('pageContext.userAgent'),
            ' (typically with ',
            picocolors_1.default.code("renderPage({ userAgent: req.headers['user-agent'] })"),
            ', see https://vike.dev/renderPage)',
        ].join('')
        : picocolors_1.default.code('options.userAgent');
    const errMsg = [
        `HTML streaming (${link}) disabled because User Agent is unknown: make sure to provide`,
        help,
        '(so that HTML streaming can be disabled for bots such as Google Bot).',
    ];
    if (!isVike) {
        errMsg.push(`Or set ${picocolors_1.default.code('options.disable')} to ${picocolors_1.default.code('true')} to suppress this warning.`);
    }
    (0, utils_1.assertWarning)(false, errMsg.join(' '), { onlyOnce: true });
}
