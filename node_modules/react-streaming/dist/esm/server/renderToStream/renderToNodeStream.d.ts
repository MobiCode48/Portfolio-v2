export { renderToNodeStream };
import React from 'react';
import type { renderToPipeableStream as renderToPipeableStream__ } from 'react-dom/server';
import type { StreamOptions } from '../renderToStream';
declare function renderToNodeStream(element: React.ReactNode, disable: boolean, options: {
    debug?: boolean;
    onBoundaryError?: (err: unknown) => void;
    streamOptions?: StreamOptions;
    timeout?: number | null;
    onTimeout?: () => void;
    renderToPipeableStream?: typeof renderToPipeableStream__;
}): Promise<{
    pipe: import("./createPipeWrapper").Pipe;
    abort: (this: void) => void;
    readable: null;
    streamEnd: Promise<boolean>;
    injectToStream: import("./createBuffer").InjectToStream;
}>;
