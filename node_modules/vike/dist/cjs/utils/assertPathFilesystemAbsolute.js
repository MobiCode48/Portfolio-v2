"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isPathFilesystemAbsolute = exports.assertPathFilesystemAbsolute = void 0;
const path_1 = __importDefault(require("path"));
const assert_js_1 = require("./assert.js");
const filesystemPathHandling_js_1 = require("./filesystemPathHandling.js");
/** Assert path is absolute starting from the filesystem root. */
function assertPathFilesystemAbsolute(p) {
    // The assert is "eventually reliable":
    // - For Windows users, the assert is correct.
    // - For Linux users assertPathFilesystemAbsolute() will erroneously succeed if `p` is a path absolute from the user root dir.
    //   - But that's okay because the assertion will eventually fail for Windows users.
    (0, assert_js_1.assert)(isPathFilesystemAbsolute(p));
}
exports.assertPathFilesystemAbsolute = assertPathFilesystemAbsolute;
/** Whether path is absolute starting from the filesystem root. Isn't reliable for Linux users: isPathFilesystemAbsolute() returns `true` for paths absolute from the user root dir. */
function isPathFilesystemAbsolute(p) {
    (0, filesystemPathHandling_js_1.assertPosixPath)(p);
    (0, assert_js_1.assert)(!p.startsWith('/@fs/'));
    if (process.platform !== 'win32') {
        // - For linux users, there doesn't seem to be a reliable way to distinguish between:
        //   - File path absolute starting from filesystem root, e.g. /home/rom/code/my-app/pages/about/+Page.js
        //   - File path absolute starting from user root dir (Vite's `config.root`), e.g. /pages/about/+Page.js
        // - Checking whether `p` starts with the first directory of process.cwd() (or `userRootDir`) can be erroneous, most notably when using docker: https://github.com/vikejs/vike/issues/703
        // - Using require.resolve() would be a solution but probably too slow?
        return p.startsWith('/');
    }
    else {
        const yes = path_1.default.win32.isAbsolute(p);
        // Ensure isPathFilesystemAbsolute() returns `false` if path is absolute starting from the user root dir (see comments above).
        if (yes)
            (0, assert_js_1.assert)(!p.startsWith('/'));
        return yes;
    }
}
exports.isPathFilesystemAbsolute = isPathFilesystemAbsolute;
