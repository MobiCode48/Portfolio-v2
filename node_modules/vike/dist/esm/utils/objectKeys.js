export { objectEntries };
export { objectFromEntries };
export { objectKeys };
// export { forEach }
// https://stackoverflow.com/questions/60141960/typescript-key-value-relation-preserving-object-entries-type/75337277#75337277
/** Same as Object.entries() but with type inference */
function objectEntries(obj) {
    return Object.entries(obj);
}
/** Same as Object.fromEntries() but with type inference */
function objectFromEntries(arr) {
    return Object.fromEntries(arr);
}
// https://stackoverflow.com/questions/52856496/typescript-object-keys-return-string
// https://github.com/sindresorhus/ts-extras/blob/main/source/object-keys.ts
/** Same as Object.keys() but with type inference */
function objectKeys(obj) {
    return Object.keys(obj);
}
/* Not used yet, but can be quite useful.
function forEach<Obj extends object>(
  obj: Obj,
  iterator: <Key extends keyof Obj>(key: Key, val: Obj[Key]) => void
): void {
  Object.entries(obj).forEach(([key, val]) => iterator(key as keyof Obj, val))
}
//*/
